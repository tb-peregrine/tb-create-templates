
DESCRIPTION >
    API to detect anomalies in system resource usage based on predefined thresholds

NODE anomaly_detection_node
SQL >
    %
    SELECT
        timestamp,
        host_id,
        host_name,
        cpu_usage_percent,
        memory_usage_percent,
        disk_usage_percent,
        disk_free_gb,
        system_load_1m,
        system_load_5m,
        system_load_15m,
        
        /* Anomaly flags */
        (cpu_usage_percent > {{Float32(cpu_threshold, 90)}}) AS cpu_anomaly,
        (memory_usage_percent > {{Float32(memory_threshold, 90)}}) AS memory_anomaly,
        (disk_usage_percent > {{Float32(disk_threshold, 90)}}) AS disk_usage_anomaly,
        (disk_free_gb < {{Float32(disk_free_threshold, 5)}}) AS disk_free_anomaly,
        (system_load_1m > {{Float32(load_threshold, 5)}}) AS load_anomaly,
        
        /* Anomaly severity score (0-100) */
        (
            (cpu_usage_percent > {{Float32(cpu_threshold, 90)}}) * (cpu_usage_percent - {{Float32(cpu_threshold, 90)}}) * 10 +
            (memory_usage_percent > {{Float32(memory_threshold, 90)}}) * (memory_usage_percent - {{Float32(memory_threshold, 90)}}) * 10 +
            (disk_usage_percent > {{Float32(disk_threshold, 90)}}) * (disk_usage_percent - {{Float32(disk_threshold, 90)}}) * 10 +
            (disk_free_gb < {{Float32(disk_free_threshold, 5)}}) * ({{Float32(disk_free_threshold, 5)}} - disk_free_gb) * 10 +
            (system_load_1m > {{Float32(load_threshold, 5)}}) * (system_load_1m - {{Float32(load_threshold, 5)}}) * 5
        ) AS anomaly_score
    FROM system_metrics
    WHERE 1=1
    {% if defined(host_id) %}
        AND host_id = {{String(host_id, '')}}
    {% end %}
    {% if defined(host_name) %}
        AND host_name = {{String(host_name, '')}}
    {% end %}
    {% if defined(start_date) %}
        AND timestamp >= {{DateTime(start_date, '2023-01-01 00:00:00')}}
    {% else %}
        AND timestamp >= now() - interval 1 day
    {% end %}
    {% if defined(end_date) %}
        AND timestamp <= {{DateTime(end_date, '2023-12-31 23:59:59')}}
    {% else %}
        AND timestamp <= now()
    {% end %}
    {% if defined(min_anomaly_score) %}
        HAVING anomaly_score >= {{Float32(min_anomaly_score, 0)}}
    {% end %}
    ORDER BY anomaly_score DESC, timestamp DESC
    LIMIT {{Int32(limit, 100)}}

TYPE endpoint
        