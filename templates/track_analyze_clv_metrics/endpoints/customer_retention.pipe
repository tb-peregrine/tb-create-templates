
DESCRIPTION >
    Analyze customer retention rates over time

NODE customer_retention_node
SQL >
    %
    WITH customer_cohorts AS (
        SELECT 
            c.customer_id,
            toStartOfMonth(c.signup_date) AS cohort_month,
            toStartOfMonth(p.purchase_date) AS purchase_month,
            DATEDIFF('month', toStartOfMonth(c.signup_date), toStartOfMonth(p.purchase_date)) AS month_number
        FROM customers c
        JOIN purchases p ON c.customer_id = p.customer_id
        WHERE 1=1
        {% if defined(country) %}
            AND c.country = {{String(country, '')}}
        {% end %}
        {% if defined(customer_segment) %}
            AND c.customer_segment = {{String(customer_segment, '')}}
        {% end %}
        {% if defined(acquisition_source) %}
            AND c.acquisition_source = {{String(acquisition_source, '')}}
        {% end %}
    ),
    cohort_sizes AS (
        SELECT 
            cohort_month,
            COUNT(DISTINCT customer_id) AS cohort_size
        FROM customer_cohorts
        WHERE month_number = 0
        GROUP BY cohort_month
    ),
    cohort_retention AS (
        SELECT 
            cc.cohort_month,
            cc.month_number,
            COUNT(DISTINCT cc.customer_id) AS active_customers
        FROM customer_cohorts cc
        GROUP BY cc.cohort_month, cc.month_number
    )
    SELECT 
        cr.cohort_month,
        cs.cohort_size,
        cr.month_number,
        cr.active_customers,
        ROUND(cr.active_customers / cs.cohort_size * 100, 2) AS retention_rate
    FROM cohort_retention cr
    JOIN cohort_sizes cs ON cr.cohort_month = cs.cohort_month
    WHERE cr.month_number BETWEEN 0 AND 12
    ORDER BY cr.cohort_month, cr.month_number
TYPE endpoint
        