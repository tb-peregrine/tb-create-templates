
DESCRIPTION >
    Analyze user activity patterns to identify engagement trends

NODE user_activity_patterns_node
SQL >
    %
    SELECT 
        user_id,
        min(timestamp) as first_activity,
        max(timestamp) as last_activity,
        count(DISTINCT toDate(timestamp)) as active_days,
        count(*) as total_events,
        count(DISTINCT session_id) as total_sessions,
        dateDiff('day', min(timestamp), max(timestamp)) as days_since_first_active,
        dateDiff('day', max(timestamp), now()) as days_since_last_active,
        round(count(DISTINCT toDate(timestamp)) / greatest(1, dateDiff('day', min(timestamp), max(timestamp))), 3) as activity_frequency,
        any(platform) as platform,
        any(country) as country,
        any(device_type) as device_type,
        count(DISTINCT session_id) / count(DISTINCT toDate(timestamp)) as sessions_per_active_day,
        count(*) / count(DISTINCT session_id) as events_per_session
    FROM user_events
    WHERE 
        {% if defined(min_date) %}
        timestamp >= {{DateTime(min_date, '2023-01-01 00:00:00')}}
        {% else %}
        timestamp >= toDateTime('2023-01-01 00:00:00')
        {% end %}
        {% if defined(max_date) %}
        AND timestamp <= {{DateTime(max_date, '2023-12-31 23:59:59')}}
        {% else %}
        AND timestamp <= now()
        {% end %}
        {% if defined(platform) %}
        AND platform = {{String(platform, 'all')}}
        {% end %}
        {% if defined(country) %}
        AND country = {{String(country, 'all')}}
        {% end %}
    GROUP BY user_id
    {% if defined(min_activity_threshold) %}
    HAVING active_days >= {{Int(min_activity_threshold, 1)}}
    {% end %}
    ORDER BY 
        {% if defined(sort_by) and sort_by == 'recency' %}
        days_since_last_active ASC
        {% elif defined(sort_by) and sort_by == 'frequency' %}
        activity_frequency DESC
        {% elif defined(sort_by) and sort_by == 'longevity' %}
        days_since_first_active DESC
        {% else %}
        total_events DESC
        {% end %}
    LIMIT {{Int(limit, 1000)}}

TYPE endpoint
        